{"ast":null,"code":"var _jsxFileName = \"/Users/aryan/201proj/CSCI201-CodeBattle/src/Components/Signupbox.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './Signupbox.css';\n// import { useNavigate } from 'react-router-dom';\n\n// const Loginbox = () => {\n//   let navigate = useNavigate();\n//   return (\n//     <form className=\"form-control\" action=\"/register\" method=\"post\">\n//       <p className=\"title\">Sign up</p>\n//       <div className=\"input-field\">\n//         <input name=\"signup-email\" required=\"\" className=\"input\" type=\"text\" />\n//         <label className=\"label\">Enter your Email</label>\n//       </div>\n//       <div className=\"input-field\">\n//         <input name=\"signup-password\" required=\"\" className=\"input\" type=\"password\" />\n//         <label className=\"label\">Enter Password</label>\n//       </div>\n//       <a href=\"/forgot-password\">Forgot your password?</a> {/* Link to your forgot-password route */}\n//       <button type=\"submit\" className=\"submit-btn\" name=\"action\" value=\"register\" onClick={() => navigate('/findbattle')}>Sign Up</button>\n//     </form>\n//   );\n// }\n\n// export default Loginbox;\n// import React, { useState } from 'react';\n// import './Signupbox.css';\n// import { useNavigate } from 'react-router-dom';\n\n// const Signupbox = () => {\n//   const navigate = useNavigate();\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleSignUp = async () => {\n//     try {\n//       const response = await fetch('/register', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       if (response.ok) {\n//         // Registration successful, store email in session storage\n//         sessionStorage.setItem('email', email);\n\n//         // Navigate to the dashboard page\n//         navigate('/findbattle');\n//       } else {\n//         // Handle error response\n//         // For example, display an error message to the user\n//         console.error('Registration failed:', response.statusText);\n//       }\n//     } catch (error) {\n//       // Handle network errors\n//       console.error('Network error:', error.message);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form className=\"form-control\">\n//         <p className=\"title\">Sign up</p>\n//         <div className=\"input-field\">\n//           <input\n//             name=\"signup-email\"\n//             required=\"\"\n//             className=\"input\"\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//           <label className=\"label\">Enter your Email</label>\n//         </div>\n//         <div className=\"input-field\">\n//           <input\n//             name=\"signup-password\"\n//             required=\"\"\n//             className=\"input\"\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//           <label className=\"label\">Enter Password</label>\n//         </div>\n//         <a href=\"/forgot-password\">Forgot your password?</a> {/* Link to your forgot-password route */}\n//         <button type=\"button\" className=\"submit-btn\" name=\"action\" value=\"register\" onClick={handleSignUp}>\n//           Sign Up\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Signupbox;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signupbox = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSignUp = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/LeetcodeBattleBackend/register?email=${email}&password=${password}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        sessionStorage.setItem('email', email);\n        navigate('/findbattle');\n      } else {\n        console.error('Registration failed:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Network error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-5 bg-white shadow-xl w-96 flex flex-col items-center p-6 rounded-lg space-y-2.5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold\",\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"signup-email\",\n        required: true,\n        className: \"mt-4 w-full rounded-lg h-11 border-gray-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 px-2.5\",\n        type: \"email\",\n        placeholder: \"Enter your Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"signup-password\",\n        required: true,\n        className: \"mt-4 w-full rounded-lg h-11 border-gray-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 px-2.5\",\n        type: \"password\",\n        placeholder: \"Enter Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/forgot-password\",\n      className: \"text-blue-500 hover:text-blue-700\",\n      children: \"Forgot your password?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"mt-8 h-14 bg-gradient-to-b from-gray-900 to-black rounded-lg border-0 text-white text-lg font-bold w-full hover:shadow-lg transition-all duration-300 cursor-pointer\",\n      onClick: handleSignUp,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(Signupbox, \"3EppOPrTUbqGnofT+5nt0Tjfe+w=\", false, function () {\n  return [useNavigate];\n});\n_c = Signupbox;\nexport default Signupbox;\nvar _c;\n$RefreshReg$(_c, \"Signupbox\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Signupbox","_s","navigate","email","setEmail","password","setPassword","handleSignUp","response","fetch","method","headers","ok","sessionStorage","setItem","console","error","statusText","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","required","type","placeholder","value","onChange","e","target","href","onClick","_c","$RefreshReg$"],"sources":["/Users/aryan/201proj/CSCI201-CodeBattle/src/Components/Signupbox.js"],"sourcesContent":["// import React from 'react';\n// import './Signupbox.css';\n// import { useNavigate } from 'react-router-dom';\n\n// const Loginbox = () => {\n//   let navigate = useNavigate();\n//   return (\n//     <form className=\"form-control\" action=\"/register\" method=\"post\">\n//       <p className=\"title\">Sign up</p>\n//       <div className=\"input-field\">\n//         <input name=\"signup-email\" required=\"\" className=\"input\" type=\"text\" />\n//         <label className=\"label\">Enter your Email</label>\n//       </div>\n//       <div className=\"input-field\">\n//         <input name=\"signup-password\" required=\"\" className=\"input\" type=\"password\" />\n//         <label className=\"label\">Enter Password</label>\n//       </div>\n//       <a href=\"/forgot-password\">Forgot your password?</a> {/* Link to your forgot-password route */}\n//       <button type=\"submit\" className=\"submit-btn\" name=\"action\" value=\"register\" onClick={() => navigate('/findbattle')}>Sign Up</button>\n//     </form>\n//   );\n// }\n\n// export default Loginbox;\n// import React, { useState } from 'react';\n// import './Signupbox.css';\n// import { useNavigate } from 'react-router-dom';\n\n// const Signupbox = () => {\n//   const navigate = useNavigate();\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleSignUp = async () => {\n//     try {\n//       const response = await fetch('/register', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       if (response.ok) {\n//         // Registration successful, store email in session storage\n//         sessionStorage.setItem('email', email);\n\n//         // Navigate to the dashboard page\n//         navigate('/findbattle');\n//       } else {\n//         // Handle error response\n//         // For example, display an error message to the user\n//         console.error('Registration failed:', response.statusText);\n//       }\n//     } catch (error) {\n//       // Handle network errors\n//       console.error('Network error:', error.message);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form className=\"form-control\">\n//         <p className=\"title\">Sign up</p>\n//         <div className=\"input-field\">\n//           <input\n//             name=\"signup-email\"\n//             required=\"\"\n//             className=\"input\"\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//           <label className=\"label\">Enter your Email</label>\n//         </div>\n//         <div className=\"input-field\">\n//           <input\n//             name=\"signup-password\"\n//             required=\"\"\n//             className=\"input\"\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//           <label className=\"label\">Enter Password</label>\n//         </div>\n//         <a href=\"/forgot-password\">Forgot your password?</a> {/* Link to your forgot-password route */}\n//         <button type=\"button\" className=\"submit-btn\" name=\"action\" value=\"register\" onClick={handleSignUp}>\n//           Sign Up\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Signupbox;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Signupbox = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSignUp = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/LeetcodeBattleBackend/register?email=${email}&password=${password}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        \n      });\n\n      if (response.ok) {\n        sessionStorage.setItem('email', email);\n        navigate('/findbattle');\n      } else {\n        console.error('Registration failed:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Network error:', error.message);\n    }\n  };\n\n  return (\n    <div className=\"m-5 bg-white shadow-xl w-96 flex flex-col items-center p-6 rounded-lg space-y-2.5\">\n      <h1 className=\"text-3xl font-bold\">Sign up</h1>\n      <div className=\"relative w-full\">\n        <input\n          name=\"signup-email\"\n          required\n          className=\"mt-4 w-full rounded-lg h-11 border-gray-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 px-2.5\"\n          type=\"email\"\n          placeholder=\"Enter your Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n      <div className=\"relative w-full\">\n        <input\n          name=\"signup-password\"\n          required\n          className=\"mt-4 w-full rounded-lg h-11 border-gray-200 focus:border-blue-500 focus:ring-2 focus:ring-blue-500 px-2.5\"\n          type=\"password\"\n          placeholder=\"Enter Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <a href=\"/forgot-password\" className=\"text-blue-500 hover:text-blue-700\">Forgot your password?</a>\n      <button\n        type=\"button\"\n        className=\"mt-8 h-14 bg-gradient-to-b from-gray-900 to-black rounded-lg border-0 text-white text-lg font-bold w-full hover:shadow-lg transition-all duration-300 cursor-pointer\"\n        onClick={handleSignUp}\n      >\n        Sign Up\n      </button>\n    </div>\n  );\n};\n\nexport default Signupbox;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}