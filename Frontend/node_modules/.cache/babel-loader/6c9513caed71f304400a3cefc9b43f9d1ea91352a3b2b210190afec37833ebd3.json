{"ast":null,"code":"var _jsxFileName = \"/Users/aryan/201proj/CSCI201-CodeBattle/src/Components/BattlePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './BattlePage.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodingChallenge = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [isWaiting, setIsWaiting] = useState(false); // Using state to manage isWaiting\n  const navigate = useNavigate();\n  const handleSubmit = () => {\n    setIsWaiting(true); // Setting isWaiting to true triggers a re-render\n    sendMessageToServerlet();\n  };\n  const sendMessageToServerlet = async () => {\n    const code = encodeURIComponent(document.getElementById('code-editor').value);\n    const email = sessionStorage.getItem('email');\n    try {\n      const response = await fetch(`http://localhost:8080/LeetcodeBattleBackend/runCode?code=${code}?email=${email}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'text/plain'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send message to serverlet');\n      }\n      const responseData = await response.text().then(text => parseFloat(text.trim()));\n      console.log(JSON.stringify(responseData));\n      // Assuming responseData includes the number to pass\n      navigate('/winloss', {\n        state: {\n          number: responseData\n        }\n      }); // Use navigate to go to /winloss with number\n    } catch (error) {\n      console.error('Error sending message to serverlet:', error);\n    }\n  };\n  const number = parseInt(new URLSearchParams(window.location.search).get('number'));\n  let requestSent = false;\n  useEffect(() => {\n    if (requestSent) return;\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"http://localhost:8080/LeetcodeBattleBackend/runCode\", true);\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          console.log('Number sent to servlet successfully');\n        } else {\n          console.error('Error sending number to servlet:', xhr.status);\n        }\n      }\n    };\n    xhr.send(\"number=\" + number);\n    requestSent = true;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Problem Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Write a function that reverses a string. The input string is given as an array of characters s.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"code-editor\",\n        style: {\n          width: '100%',\n          height: '250px',\n          fontSize: '16px',\n          padding: '10px'\n        },\n        defaultValue: \"solution(input, target)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: '100px',\n          margin: '10px',\n          fontSize: '16px'\n        },\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"waiting\",\n      style: {\n        display: isWaiting ? 'block' : 'none',\n        position: 'fixed',\n        bottom: 100,\n        width: '100%',\n        textAlign: 'center',\n        marginLeft: 100,\n        padding: '10px',\n        color: 'white',\n        fontSize: '32px',\n        textColor: \"white\"\n      },\n      children: \"Waiting for opponent...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(CodingChallenge, \"6B4OwB2tjIKk/Mpzn+HW+GPGip0=\", false, function () {\n  return [useNavigate];\n});\n_c = CodingChallenge;\nexport default CodingChallenge;\nvar _c;\n$RefreshReg$(_c, \"CodingChallenge\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","CodingChallenge","_s","isLoading","setIsLoading","message","setMessage","isWaiting","setIsWaiting","navigate","handleSubmit","sendMessageToServerlet","code","encodeURIComponent","document","getElementById","value","email","sessionStorage","getItem","response","fetch","method","headers","ok","Error","responseData","text","then","parseFloat","trim","console","log","JSON","stringify","state","number","error","parseInt","URLSearchParams","window","location","search","get","requestSent","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","status","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","width","height","fontSize","padding","defaultValue","margin","onClick","display","position","bottom","textAlign","marginLeft","color","textColor","_c","$RefreshReg$"],"sources":["/Users/aryan/201proj/CSCI201-CodeBattle/src/Components/BattlePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './BattlePage.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CodingChallenge = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [isWaiting, setIsWaiting] = useState(false); // Using state to manage isWaiting\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = () => {\r\n        setIsWaiting(true); // Setting isWaiting to true triggers a re-render\r\n        sendMessageToServerlet();\r\n    };\r\n\r\n    const sendMessageToServerlet = async () => {\r\n        const code = encodeURIComponent(document.getElementById('code-editor').value);\r\n        const email = sessionStorage.getItem('email');\r\n        try {\r\n          const response = await fetch(`http://localhost:8080/LeetcodeBattleBackend/runCode?code=${code}?email=${email}`, {\r\n            method: 'GET',\r\n            headers: {'Content-Type': 'text/plain'}\r\n          });\r\n    \r\n          if (!response.ok) {\r\n            throw new Error('Failed to send message to serverlet');\r\n          }\r\n          \r\n          const responseData = await response.text().then(text => parseFloat(text.trim()));\r\n          console.log(JSON.stringify(responseData));\r\n          // Assuming responseData includes the number to pass\r\n          navigate('/winloss', { state: { number: responseData } });  // Use navigate to go to /winloss with number\r\n        } catch (error) {\r\n          console.error('Error sending message to serverlet:', error);\r\n        }\r\n    };\r\n\r\n    const number = parseInt(new URLSearchParams(window.location.search).get('number'));\r\n\r\n    let requestSent = false;\r\n\r\n    useEffect(() => {\r\n        if (requestSent) return;\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"POST\", \"http://localhost:8080/LeetcodeBattleBackend/runCode\", true);\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === XMLHttpRequest.DONE) {\r\n                if (xhr.status === 200) {\r\n                    console.log('Number sent to servlet successfully');\r\n                } else {\r\n                    console.error('Error sending number to servlet:', xhr.status);\r\n                }\r\n            }\r\n        };\r\n        xhr.send(\"number=\" + number);\r\n        requestSent = true;\r\n\r\n    }, []); \r\n\r\n    return (\r\n        <div className=\"container-main\">\r\n            <div className=\"left-panel\">\r\n                <div className=\"problem-description\">\r\n                    <h2>Problem Description</h2>\r\n                    <p>Write a function that reverses a string. The input string is given as an array of characters s.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-panel\">\r\n                <textarea\r\n                    id=\"code-editor\"\r\n                    style={{ width: '100%', height: '250px', fontSize: '16px', padding: '10px' }}\r\n                    defaultValue=\"solution(input, target)\"\r\n                ></textarea>\r\n                <button style={{ width: '100px', margin: '10px', fontSize: '16px' }} onClick={handleSubmit}>Submit</button>\r\n            </div>\r\n            <div\r\n                id=\"waiting\"\r\n                style={{\r\n                    display: isWaiting ? 'block' : 'none',\r\n                    position: 'fixed',\r\n                    bottom: 100,\r\n                    width: '100%',\r\n                    textAlign: 'center',\r\n                    marginLeft: 100,\r\n                    padding: '10px',\r\n                    color: 'white',\r\n                    fontSize: '32px',\r\n                    textColor: \"white\",\r\n                }}\r\n            >\r\n                Waiting for opponent...\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodingChallenge;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}