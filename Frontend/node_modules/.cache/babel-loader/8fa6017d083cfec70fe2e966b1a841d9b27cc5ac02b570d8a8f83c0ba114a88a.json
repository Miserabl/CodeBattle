{"ast":null,"code":"var _jsxFileName = \"/Users/aryan/201proj/CSCI201-CodeBattle/src/Components/Signupbox.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './Signupbox.css';\n// import { useNavigate } from 'react-router-dom';\n\n// const Loginbox = () => {\n//   let navigate = useNavigate();\n//   return (\n//     <form className=\"form-control\" action=\"/register\" method=\"post\">\n//       <p className=\"title\">Sign up</p>\n//       <div className=\"input-field\">\n//         <input name=\"signup-email\" required=\"\" className=\"input\" type=\"text\" />\n//         <label className=\"label\">Enter your Email</label>\n//       </div>\n//       <div className=\"input-field\">\n//         <input name=\"signup-password\" required=\"\" className=\"input\" type=\"password\" />\n//         <label className=\"label\">Enter Password</label>\n//       </div>\n//       <a href=\"/forgot-password\">Forgot your password?</a> {/* Link to your forgot-password route */}\n//       <button type=\"submit\" className=\"submit-btn\" name=\"action\" value=\"register\" onClick={() => navigate('/findbattle')}>Sign Up</button>\n//     </form>\n//   );\n// }\n\n// export default Loginbox;\nimport React, { useState } from 'react';\nimport './Signupbox.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signupbox = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSignUp = async () => {\n    try {\n      const response = await fetch('/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        // Registration successful, store email in session storage\n        sessionStorage.setItem('email', email);\n\n        // Navigate to the dashboard page\n        navigate('/findbattle');\n      } else {\n        // Handle error response\n        // For example, display an error message to the user\n        console.error('Registration failed:', response.statusText);\n      }\n    } catch (error) {\n      // Handle network errors\n      console.error('Network error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"signup-email\",\n          required: \"\",\n          className: \"input\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Enter your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"signup-password\",\n          required: \"\",\n          className: \"input\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/forgot-password\",\n        children: \"Forgot your password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"submit-btn\",\n        name: \"action\",\n        value: \"register\",\n        onClick: handleSignUp,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Signupbox, \"3EppOPrTUbqGnofT+5nt0Tjfe+w=\", false, function () {\n  return [useNavigate];\n});\n_c = Signupbox;\nexport default Signupbox;\nvar _c;\n$RefreshReg$(_c, \"Signupbox\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Signupbox","_s","navigate","email","setEmail","password","setPassword","handleSignUp","response","fetch","method","headers","body","JSON","stringify","ok","sessionStorage","setItem","console","error","statusText","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","required","type","value","onChange","e","target","href","onClick","_c","$RefreshReg$"],"sources":["/Users/aryan/201proj/CSCI201-CodeBattle/src/Components/Signupbox.js"],"sourcesContent":["// import React from 'react';\n// import './Signupbox.css';\n// import { useNavigate } from 'react-router-dom';\n\n// const Loginbox = () => {\n//   let navigate = useNavigate();\n//   return (\n//     <form className=\"form-control\" action=\"/register\" method=\"post\">\n//       <p className=\"title\">Sign up</p>\n//       <div className=\"input-field\">\n//         <input name=\"signup-email\" required=\"\" className=\"input\" type=\"text\" />\n//         <label className=\"label\">Enter your Email</label>\n//       </div>\n//       <div className=\"input-field\">\n//         <input name=\"signup-password\" required=\"\" className=\"input\" type=\"password\" />\n//         <label className=\"label\">Enter Password</label>\n//       </div>\n//       <a href=\"/forgot-password\">Forgot your password?</a> {/* Link to your forgot-password route */}\n//       <button type=\"submit\" className=\"submit-btn\" name=\"action\" value=\"register\" onClick={() => navigate('/findbattle')}>Sign Up</button>\n//     </form>\n//   );\n// }\n\n// export default Loginbox;\nimport React, { useState } from 'react';\nimport './Signupbox.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst Signupbox = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSignUp = async () => {\n    try {\n      const response = await fetch('/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (response.ok) {\n        // Registration successful, store email in session storage\n        sessionStorage.setItem('email', email);\n\n        // Navigate to the dashboard page\n        navigate('/findbattle');\n      } else {\n        // Handle error response\n        // For example, display an error message to the user\n        console.error('Registration failed:', response.statusText);\n      }\n    } catch (error) {\n      // Handle network errors\n      console.error('Network error:', error.message);\n    }\n  };\n\n  return (\n    <div>\n      <form className=\"form-control\">\n        <p className=\"title\">Sign up</p>\n        <div className=\"input-field\">\n          <input\n            name=\"signup-email\"\n            required=\"\"\n            className=\"input\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <label className=\"label\">Enter your Email</label>\n        </div>\n        <div className=\"input-field\">\n          <input\n            name=\"signup-password\"\n            required=\"\"\n            className=\"input\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <label className=\"label\">Enter Password</label>\n        </div>\n        <a href=\"/forgot-password\">Forgot your password?</a> {/* Link to your forgot-password route */}\n        <button type=\"button\" className=\"submit-btn\" name=\"action\" value=\"register\" onClick={handleSignUp}>\n          Sign Up\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Signupbox;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}