{"ast":null,"code":"var _jsxFileName = \"/Users/aryan/201proj/CSCI201-CodeBattle/src/Components/BattlePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './BattlePage.css';\nimport battleImage from '../Assets/codebattle_Logo.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodingChallenge = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const requestBattle = async () => {\n    setIsLoading(true); // Indicate loading\n    try {\n      const response = await fetch('http://localhost:8080/damn/findbattle', {\n        method: 'GET',\n        mode: 'no-cors',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.text();\n      setMessage(data); // Update state with the server response\n    } catch (error) {\n      setMessage('Failed to request battle: ' + error.message); // Handle error\n    }\n    //setIsLoading(false); // Reset loading state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: battleImage,\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Problem Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Write a function that reverses a string. The input string is given as an array of characters s.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"code-editor\",\n        placeholder: \"Write your code here...\",\n        style: {\n          width: '100%',\n          height: '250px',\n          fontSize: '16px',\n          padding: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: requestBattle,\n        style: {\n          width: '100px',\n          margin: '10px',\n          fontSize: '16px'\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"waiting\",\n      style: {\n        display: isLoading ? 'block' : 'none',\n        position: 'fixed',\n        bottom: 400,\n        width: '100%',\n        textAlign: 'center',\n        marginLeft: 300,\n        padding: '10px',\n        color: 'white',\n        fontSize: '32px'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(CodingChallenge, \"9B/uvihY/IWcvmwVq/yXBzfMk5g=\");\n_c = CodingChallenge;\nexport default CodingChallenge;\nvar _c;\n$RefreshReg$(_c, \"CodingChallenge\");","map":{"version":3,"names":["React","useState","battleImage","jsxDEV","_jsxDEV","CodingChallenge","_s","isLoading","setIsLoading","message","setMessage","requestBattle","response","fetch","method","mode","headers","data","text","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","style","width","height","fontSize","padding","onClick","margin","display","position","bottom","textAlign","marginLeft","color","_c","$RefreshReg$"],"sources":["/Users/aryan/201proj/CSCI201-CodeBattle/src/Components/BattlePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './BattlePage.css';\r\nimport battleImage from '../Assets/codebattle_Logo.jpg';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CodingChallenge = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const requestBattle = async () => {\r\n        setIsLoading(true); // Indicate loading\r\n        try {\r\n            const response = await fetch('http://localhost:8080/damn/findbattle', {\r\n                method: 'GET',\r\n                mode: 'no-cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n\r\n            });\r\n            const data = await response.text();\r\n            setMessage(data); // Update state with the server response\r\n        } catch (error) {\r\n            setMessage('Failed to request battle: ' + error.message); // Handle error\r\n        }\r\n        //setIsLoading(false); // Reset loading state\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-main\">\r\n            <div className=\"header\">\r\n                <img src={battleImage} alt=\"Logo\" className=\"logo\" />\r\n            </div>\r\n            <div className=\"left-panel\">\r\n                <div className=\"problem-description\">\r\n                    <h2>Problem Description</h2>\r\n                    <p>Write a function that reverses a string. The input string is given as an array of characters s.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-panel\">\r\n                <textarea id=\"code-editor\" placeholder=\"Write your code here...\" style={{ width: '100%', height: '250px', fontSize: '16px', padding: '10px' }}></textarea>\r\n                <button onClick={requestBattle} style={{ width: '100px', margin: '10px', fontSize: '16px' }}>Submit</button>\r\n            </div>\r\n            <div id=\"waiting\" style={{\r\n                display: isLoading ? 'block' : 'none',\r\n                position: 'fixed',\r\n                bottom: 400,\r\n                width: '100%',\r\n                textAlign: 'center',\r\n                marginLeft: 300,\r\n                padding: '10px',\r\n                color: 'white',\r\n                fontSize: '32px',\r\n            }}>\r\n                Loading...\r\n            </div>\r\n    \r\n        </div>\r\n    \r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default CodingChallenge;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}