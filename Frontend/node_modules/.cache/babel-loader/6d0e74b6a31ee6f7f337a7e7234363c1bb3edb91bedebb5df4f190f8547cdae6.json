{"ast":null,"code":"var _jsxFileName = \"/Users/aryan/201proj/CSCI201-CodeBattle/src/Components/Loginbox.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './Loginbox.css';\n// import { useNavigate } from 'react-router-dom';\n\n// const Loginbox = () => {\n//   let navigate = useNavigate();\n//   return (\n//     <form className=\"form-control\" action=\"/login\" method=\"post\">\n//       <p className=\"title\">Login</p>\n//       <div className=\"input-field\">\n//         <input name=\"login-email\" required=\"\" className=\"input\" type=\"text\" />\n//         <label className=\"label\">Enter Email</label>\n//       </div>\n//       <div className=\"input-field\">\n//         <input name=\"login-password\" required=\"\" className=\"input\" type=\"password\" />\n//         <label className=\"label\">Enter Password</label>\n//       </div>\n//       <a href=\"/forgot-password\">Forgot your password?</a> {/* Link to your forgot-password route */}\n//       <button type=\"submit\" className=\"submit-btn\" name=\"action\" value=\"login\"  onClick={() => navigate('/findbattle')}>Sign In</button>\n//     </form>\n//   );\n// }\n\n// export default Loginbox;\n\nimport React, { useState } from 'react';\nimport './Loginbox.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loginbox = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/LeetcodeBattleBackend/register?email=${email}&password=${password}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        // Login successful, store email in session storage\n        sessionStorage.setItem('email', email);\n\n        // Navigate to the dashboard page\n        navigate('/findbattle');\n      } else {\n        // Handle error response\n        const errorMessage = await response.text();\n        setError(errorMessage || 'Invalid email or password');\n        console.error('Login failed:', errorMessage);\n      }\n    } catch (error) {\n      // Handle network errors\n      setError('Network error. Please try again.');\n      console.error('Network error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"login-email\",\n          required: \"\",\n          className: \"input\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Enter your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"login-password\",\n          required: \"\",\n          className: \"input\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"submit-btn\",\n        name: \"action\",\n        value: \"login\",\n        onClick: handleLogin,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Loginbox, \"qCGiFeeUWkiIU+KqUq0nNz+KCrI=\", false, function () {\n  return [useNavigate];\n});\n_c = Loginbox;\nexport default Loginbox;\nvar _c;\n$RefreshReg$(_c, \"Loginbox\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Loginbox","_s","navigate","email","setEmail","password","setPassword","error","setError","handleLogin","response","fetch","method","headers","status","sessionStorage","setItem","errorMessage","text","console","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","required","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/aryan/201proj/CSCI201-CodeBattle/src/Components/Loginbox.js"],"sourcesContent":["// import React from 'react';\n// import './Loginbox.css';\n// import { useNavigate } from 'react-router-dom';\n\n// const Loginbox = () => {\n//   let navigate = useNavigate();\n//   return (\n//     <form className=\"form-control\" action=\"/login\" method=\"post\">\n//       <p className=\"title\">Login</p>\n//       <div className=\"input-field\">\n//         <input name=\"login-email\" required=\"\" className=\"input\" type=\"text\" />\n//         <label className=\"label\">Enter Email</label>\n//       </div>\n//       <div className=\"input-field\">\n//         <input name=\"login-password\" required=\"\" className=\"input\" type=\"password\" />\n//         <label className=\"label\">Enter Password</label>\n//       </div>\n//       <a href=\"/forgot-password\">Forgot your password?</a> {/* Link to your forgot-password route */}\n//       <button type=\"submit\" className=\"submit-btn\" name=\"action\" value=\"login\"  onClick={() => navigate('/findbattle')}>Sign In</button>\n//     </form>\n//   );\n// }\n\n// export default Loginbox;\n\nimport React, { useState } from 'react';\nimport './Loginbox.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst Loginbox = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/LeetcodeBattleBackend/register?email=${email}&password=${password}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        \n      });\n\n      if (response.status === 200) {\n        // Login successful, store email in session storage\n        sessionStorage.setItem('email', email);\n\n        // Navigate to the dashboard page\n        navigate('/findbattle');\n      } else {\n        // Handle error response\n        const errorMessage = await response.text();\n        setError(errorMessage || 'Invalid email or password');\n        console.error('Login failed:', errorMessage);\n      }\n    } catch (error) {\n      // Handle network errors\n      setError('Network error. Please try again.');\n      console.error('Network error:', error.message);\n    }\n  };\n\n  return (\n    <div>\n      <form className=\"form-control\">\n        <p className=\"title\">Log in</p>\n        <div className=\"input-field\">\n          <input\n            name=\"login-email\"\n            required=\"\"\n            className=\"input\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <label className=\"label\">Enter your Email</label>\n        </div>\n        <div className=\"input-field\">\n          <input\n            name=\"login-password\"\n            required=\"\"\n            className=\"input\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <label className=\"label\">Enter Password</label>\n        </div>\n        {error && <p className=\"error-message\">{error}</p>}\n        <button type=\"button\" className=\"submit-btn\" name=\"action\" value=\"login\" onClick={handleLogin}>\n          Log In\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Loginbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}